openapi: 3.0.3
info:
  title: Caregiver Shift Tracker API
  version: 1.0.0
  description: |
    API specification for the Caregiver Shift Tracker backend. Authentication uses a simplified client credentials flow.
servers:
  - url: http://localhost:8080
    description: Local development server
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    TokenResponse:
      type: object
      properties:
        access_token:
          type: string
        token_type:
          type: string
          example: Bearer
        expires_in:
          type: integer
        scope:
          type: string
        id_token:
          type: string
        caregiver:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            email:
              type: string
      required:
        - access_token
        - token_type
        - expires_in
    ScheduleSummary:
      type: object
      properties:
        id:
          type: string
        client_name:
          type: string
        service_name:
          type: string
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        status:
          type: string
          enum: [scheduled, in_progress, completed, cancelled, missed]
        location_name:
          type: string
    ScheduleDetail:
      allOf:
        - $ref: '#/components/schemas/ScheduleSummary'
        - type: object
          properties:
            caregiver_id:
              type: string
            client:
              type: object
              properties:
                id:
                  type: string
                full_name:
                  type: string
                email:
                  type: string
                phone:
                  type: string
                address:
                  type: string
                city:
                  type: string
                state:
                  type: string
                postal:
                  type: string
                latitude:
                  type: number
                longitude:
                  type: number
            status:
              type: string
            clock_in_at:
              type: string
              format: date-time
              nullable: true
            clock_out_at:
              type: string
              format: date-time
              nullable: true
            notes:
              type: string
              nullable: true
            tasks:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  title:
                    type: string
                  description:
                    type: string
                  status:
                    type: string
                    enum: [pending, completed, not_completed]
                  not_completed_reason:
                    type: string
                    nullable: true
                  sort_order:
                    type: integer
                  updated_at:
                    type: string
                    format: date-time
    ClockEventRequest:
      type: object
      required: [latitude, longitude]
      properties:
        latitude:
          type: number
        longitude:
          type: number
        notes:
          type: string
          nullable: true
    UpdateTaskRequest:
      type: object
      required: [schedule_id, status]
      properties:
        schedule_id:
          type: string
        status:
          type: string
          enum: [completed, not_completed]
        reason:
          type: string
          nullable: true
    CreateTaskRequest:
      type: object
      required: [title]
      properties:
        title:
          type: string
        description:
          type: string
        sort_order:
          type: integer
paths:
  /api/auth/token:
    post:
      summary: Obtain access token via client credentials
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                grant_type:
                  type: string
                  default: client_credentials
                client_id:
                  type: string
                client_secret:
                  type: string
                scope:
                  type: string
      responses:
        '200':
          description: Token issued
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '400':
          description: Invalid request
  /api/schedules:
    get:
      summary: List schedules
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: status
          schema:
            type: string
          description: Comma-separated status filter
        - in: query
          name: date
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ScheduleSummary'
  /api/schedules/today:
    get:
      summary: Get today's schedules and metrics
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ScheduleSummary'
                  metrics:
                    type: object
                    properties:
                      total:
                        type: integer
                      missed:
                        type: integer
                      upcoming:
                        type: integer
                      completed:
                        type: integer
                      in_progress:
                        type: integer
                      cancelled:
                        type: integer
  /api/schedules/metrics:
    get:
      summary: Get schedule metrics for a date
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: date
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Success
  /api/schedules/{scheduleId}:
    get:
      summary: Get schedule detail
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: scheduleId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ScheduleDetail'
  /api/schedules/{scheduleId}/start:
    post:
      summary: Clock in to schedule
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: scheduleId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClockEventRequest'
      responses:
        '200':
          description: Updated schedule
  /api/schedules/{scheduleId}/end:
    post:
      summary: Clock out of schedule
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: scheduleId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClockEventRequest'
      responses:
        '200':
          description: Updated schedule
  /api/schedules/{scheduleId}/tasks:
    post:
      summary: Create task
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: scheduleId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTaskRequest'
      responses:
        '201':
          description: Created
  /api/tasks/{taskId}:
    patch:
      summary: Update task status
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: taskId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTaskRequest'
      responses:
        '200':
          description: Updated schedule snapshot
