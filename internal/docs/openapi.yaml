openapi: 3.0.3
info:
  title: Caregiver Shift Tracker API
  version: 1.0.0
  description: |
    API specification for the Caregiver Shift Tracker backend. Authentication uses a simplified client credentials flow.
servers:
  - url: http://localhost:8080
    description: Local development server
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    TokenResponse:
      type: object
      properties:
        access_token:
          type: string
        token_type:
          type: string
          example: Bearer
        expires_in:
          type: integer
        scope:
          type: string
        id_token:
          type: string
        caregiver:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            email:
              type: string
      required:
        - access_token
        - token_type
        - expires_in
    ScheduleSummary:
      type: object
      properties:
        id:
          type: string
        client_name:
          type: string
        service_name:
          type: string
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        status:
          type: string
          enum: [scheduled, in_progress, completed, cancelled, missed]
        location_name:
          type: string
    ScheduleDetail:
      allOf:
        - $ref: '#/components/schemas/ScheduleSummary'
        - type: object
          properties:
            caregiver_id:
              type: string
            client:
              type: object
              properties:
                id:
                  type: string
                full_name:
                  type: string
                email:
                  type: string
                phone:
                  type: string
                address:
                  type: string
                city:
                  type: string
                state:
                  type: string
                postal:
                  type: string
                latitude:
                  type: number
                longitude:
                  type: number
            status:
              type: string
            clock_in_at:
              type: string
              format: date-time
              nullable: true
            clock_out_at:
              type: string
              format: date-time
              nullable: true
            notes:
              type: string
              nullable: true
            tasks:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  title:
                    type: string
                  description:
                    type: string
                  status:
                    type: string
                    enum: [pending, completed, not_completed]
                  not_completed_reason:
                    type: string
                    nullable: true
                  sort_order:
                    type: integer
                  updated_at:
                    type: string
                    format: date-time
            clock_in_lat:
              type: number
              nullable: true
            clock_in_long:
              type: number
              nullable: true
            clock_out_lat:
              type: number
              nullable: true
            clock_out_long:
              type: number
              nullable: true
            location_label:
              type: string
            duration_mins:
              type: integer
    ClockEventRequest:
      type: object
      required: [latitude, longitude]
      properties:
        latitude:
          type: number
        longitude:
          type: number
        notes:
          type: string
          nullable: true
    UpdateTaskRequest:
      type: object
      required: [schedule_id, status]
      properties:
        schedule_id:
          type: string
        status:
          type: string
          enum: [completed, not_completed]
        reason:
          type: string
          nullable: true
    CreateTaskRequest:
      type: object
      required: [title]
      properties:
        title:
          type: string
        description:
          type: string
        sort_order:
          type: integer
    CaregiverLog:
      type: object
      properties:
        id:
          type: string
        caregiver_id:
          type: string
        log_type:
          type: string
          enum: [clock_in, clock_out]
        latitude:
          type: number
        longitude:
          type: number
        timestamp:
          type: string
          format: date-time
        notes:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
    CaregiverLogSummary:
      type: object
      properties:
        id:
          type: string
        caregiver_id:
          type: string
        log_type:
          type: string
          enum: [clock_in, clock_out]
        timestamp:
          type: string
          format: date-time
    TodayAttendanceStatus:
      type: object
      properties:
        caregiver_id:
          type: string
        date:
          type: string
          format: date
        has_clocked_in:
          type: boolean
        has_clocked_out:
          type: boolean
        clock_in_at:
          type: string
          format: date-time
          nullable: true
        clock_in_lat:
          type: number
          nullable: true
        clock_in_long:
          type: number
          nullable: true
        clock_out_at:
          type: string
          format: date-time
          nullable: true
        clock_out_lat:
          type: number
          nullable: true
        clock_out_long:
          type: number
          nullable: true
    Pagination:
      type: object
      properties:
        limit:
          type: integer
        offset:
          type: integer
        hasMore:
          type: boolean
    ScheduleMetrics:
      type: object
      properties:
        total:
          type: integer
        missed:
          type: integer
        upcoming:
          type: integer
        completed:
          type: integer
        in_progress:
          type: integer
        cancelled:
          type: integer
    HealthResponse:
      type: object
      properties:
        status:
          type: string
          example: ok
paths:
  /healthz:
    get:
      summary: Health check endpoint
      description: Returns the health status of the API
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
  /api/auth/token:
    post:
      summary: Obtain access token via client credentials
      description: |
        Issues an access token using client credentials flow. Supports both form-encoded 
        and JSON request bodies, as well as Basic authentication.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                grant_type:
                  type: string
                  default: client_credentials
                client_id:
                  type: string
                client_secret:
                  type: string
                scope:
                  type: string
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                grant_type:
                  type: string
                  default: client_credentials
                client_id:
                  type: string
                client_secret:
                  type: string
                scope:
                  type: string
      responses:
        '200':
          description: Token issued
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '400':
          description: Invalid request
        '401':
          description: Invalid client credentials
  /api/schedules:
    get:
      summary: List schedules
      description: Returns paginated list of schedules for the authenticated caregiver
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: status
          schema:
            type: string
          description: Comma-separated status filter
          example: scheduled,in_progress
        - in: query
          name: date
          schema:
            type: string
            format: date
          description: Filter by specific date (YYYY-MM-DD format)
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
          description: Maximum number of items to return
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
          description: Number of items to skip
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ScheduleSummary'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '401':
          description: Unauthorized
  /api/schedules/today:
    get:
      summary: Get today's schedules and metrics
      description: Returns all schedules for today along with aggregate metrics
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ScheduleSummary'
                  metrics:
                    $ref: '#/components/schemas/ScheduleMetrics'
        '401':
          description: Unauthorized
  /api/schedules/metrics:
    get:
      summary: Get schedule metrics for a date
      description: Returns aggregate counts for schedules on a specific date
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: date
          schema:
            type: string
            format: date
          description: Date to get metrics for (YYYY-MM-DD format), defaults to today
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ScheduleMetrics'
        '401':
          description: Unauthorized
  /api/schedules/{scheduleId}:
    get:
      summary: Get schedule detail
      description: Returns detailed information for a specific schedule including tasks and client info
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: scheduleId
          required: true
          schema:
            type: string
          description: ID of the schedule
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ScheduleDetail'
        '401':
          description: Unauthorized
        '404':
          description: Schedule not found
  /api/schedules/{scheduleId}/start:
    post:
      summary: Clock in to schedule
      description: Records a clock-in event for a schedule with location coordinates
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: scheduleId
          required: true
          schema:
            type: string
          description: ID of the schedule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClockEventRequest'
      responses:
        '200':
          description: Updated schedule
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ScheduleDetail'
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
        '404':
          description: Schedule not found
  /api/schedules/{scheduleId}/end:
    post:
      summary: Clock out of schedule
      description: Records a clock-out event for a schedule with location coordinates
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: scheduleId
          required: true
          schema:
            type: string
          description: ID of the schedule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClockEventRequest'
      responses:
        '200':
          description: Updated schedule
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ScheduleDetail'
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
        '404':
          description: Schedule not found
  /api/schedules/{scheduleId}/tasks:
    post:
      summary: Create task
      description: Adds a new task to an existing schedule
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: scheduleId
          required: true
          schema:
            type: string
          description: ID of the schedule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTaskRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ScheduleDetail'
                  task_id:
                    type: string
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
        '404':
          description: Schedule not found
  /api/tasks/{taskId}:
    patch:
      summary: Update task status
      description: Updates the completion status of a task
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: taskId
          required: true
          schema:
            type: string
          description: ID of the task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTaskRequest'
      responses:
        '200':
          description: Updated schedule snapshot
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ScheduleDetail'
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
        '404':
          description: Task not found
  /api/attendance/today/status:
    get:
      summary: Get today's attendance status
      description: Returns the caregiver's current attendance status for today
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/TodayAttendanceStatus'
        '401':
          description: Unauthorized
  /api/attendance/clock-in:
    post:
      summary: Record daily attendance clock-in
      description: Records a clock-in event for daily attendance (independent of schedules)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClockEventRequest'
      responses:
        '200':
          description: Clock-in recorded
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CaregiverLog'
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
        '409':
          description: Already clocked in today
  /api/attendance/clock-out:
    post:
      summary: Record daily attendance clock-out
      description: Records a clock-out event for daily attendance (independent of schedules)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClockEventRequest'
      responses:
        '200':
          description: Clock-out recorded
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/CaregiverLog'
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
        '409':
          description: Not clocked in or already clocked out
  /api/attendance/history:
    get:
      summary: Get attendance history
      description: Returns paginated attendance history for the caregiver
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: log_type
          schema:
            type: string
            enum: [clock_in, clock_out]
          description: Filter by log type
        - in: query
          name: start_date
          schema:
            type: string
            format: date
          description: Filter by start date (YYYY-MM-DD format)
        - in: query
          name: end_date
          schema:
            type: string
            format: date
          description: Filter by end date (YYYY-MM-DD format)
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
          description: Maximum number of items to return
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
          description: Number of items to skip
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CaregiverLogSummary'
        '401':
          description: Unauthorized
